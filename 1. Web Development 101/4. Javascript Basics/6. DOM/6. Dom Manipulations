How do you target nodes with "selectors"?
There are several ways, with CSS style-selectors, to target a node.
<div class="display"></div> can be selected as follows:
div
div.display
.display

There are also relational selectors such as firstElementChild or lastElementChild.
Combined with "Query Selectors", this is how you can target a node using JavaScript
i.e. document.querySelector(".display"); would select the div above.

////////////////////////////////////////////////////////////

What are the basic methods for finding/adding/removing and altering DOM nodes?
As mentioned above, you can find nodes in the DOM using query selectors.
To create an element, use document.createElement(tagName[, options])
i.e. const div = document.createElement('div'); will create a div element. However, this div has not been added to 
the webpage yet.
To append this element, use parentNode.appendChild(childNode)
i.e. parentNode.appendChild(div);
To remove this element, parentNode.removeChild(child)
This will remove child from parentNode on the DOM and returns reference to child.
i.e. parentNode.removeChild(div);
Once you have a reference to an element, as above, you can alter it in many ways.
div.style.color = 'blue'; adds the indicated style rule
div.setAttribute('id', 'theDiv'); sets the id attribute of our div to theDiv.

////////////////////////////////////////////////////////////

How do "events" and "listeners" work? What are three ways to use events in your code?
"Events" are how you make your webpage dynamic. They are triggered by "listeners", and can fire when the page 
loads, when you click your mouse, when you push keys on your keyboard, and many, many more.
The three primary ways to use events are:

By attaching scripts to event attributes on elements in the HTML document.
<button onclick="alert(this.tagName)">Click Me</button>
By setting the "on_event_" property on the DOM object in your JavaScript.
// the html file
<button id="btn">Click Me</button>

// the JavaScript file
const btn = document.querySelector(‘#btn’);
btn.onclick = (e) => alert(e.target.tagName);
By attaching event listeners to the nodes in your JavaScript.

// the html file
<button id="btn">Click Me Too</button>

// the JavaScript file
const btn = document.querySelector('#btn');
btn.addEventListener(‘click’, (e) => {
  alert(e.target.tagName);
});



