An object can be created with figure brackets {…} with an optional list of properties. A property is a “key: value” 
pair, where key is a string (also called a “property name”), and value can be anything.

Property values are accessible using the dot notation:

// get property values of the object:
alert( user.name ); // John
alert( user.age ); // 30

To remove a property, we can use delete operator:

delete user.age;


Square brackets

For multiword properties, the dot access doesn’t work
There’s an alternative “square bracket notation” that works with any string:

let user = {};

// set
user["likes birds"] = true;


The variable key may be calculated at run-time or depend on the user input. And then we use it to access the property. That gives us a great deal of flexibility.

For instance:

let user = {
  name: "John",
  age: 30
};

let key = prompt("What do you want to know about the user?", "name");

// access by variable
alert( user[key] ); // John (if enter "name")



There’s also a special operator "in" for that.

The syntax is:

"key" in object
For instance:

let user = { name: "John", age: 30 };

alert( "age" in user ); // true, user.age exists
alert( "blabla" in user ); // false, user.blabla doesn't exist

