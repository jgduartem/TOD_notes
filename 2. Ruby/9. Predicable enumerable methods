The include method

The #include? method works exactly like you think it should. If we want to know whether a particular element exists
in an array, we can use the #include? method. This method will return true if the element you pass as an argument 
to #include? exists in the array or hash; otherwise, it will return false.

numbers = [5, 6, 7, 8]

numbers.include?(6)
#=> true

numbers.include?(3)
#=> false



The any method

You might also be able to guess what the #any? method does. It returns true if any elements in your array or hash 
match the condition within the block; otherwise, it will return false.

numbers = [21, 42, 303, 499, 550, 811]

numbers.any? { |number| number > 500 }
#=> true

numbers.any? { |number| number < 20 }
#=> false



The all method

The all? method is also fairly intuitive. It only returns true if all the elements in your array or hash match the 
condition you set within the block; otherwise, it will return false.

fruits = ["apple", "banana", "strawberry", "pineapple"]

fruits.all? { |fruit| fruit.length > 3 }
#=> true

fruits.all? { |fruit| fruit.length > 6 }
#=> false



The none method

As you might expect, #none? performs the opposite function of #all?. It returns true only if the condition in the 
block matches none of the elements in your array or hash; otherwise, it returns false.